/*
 * Copyright (c) 2006 - 2010 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.wmsprocesses.processes.movement.gui.gui_builder;

import de.linogistix.common.gui.component.controls.LOSDateFormattedTextField;
import java.awt.Color;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;


import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author  artur
 */
public class AbstractCenterPanel extends javax.swing.JPanel {
    private final static Logger log = Logger.getLogger(AbstractCenterPanel.class.getName());
    /** Creates new form AbstractCenterPanel */
    public AbstractCenterPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        DocumentPropsPanel = new javax.swing.JPanel();
        OrganizationLabel = new javax.swing.JLabel();
        OrganizationComboBox = new javax.swing.JComboBox();
        FormationLabel = new javax.swing.JLabel();
        FormationComboBox = new javax.swing.JComboBox();
        MillitaryUnitLabel = new javax.swing.JLabel();
        MillitaryUnitComboBox = new javax.swing.JComboBox();
        DateLabel = new javax.swing.JLabel();
        currentDateTextField = new de.linogistix.common.gui.component.controls.LOSDateFormattedTextField();
        MovementPanel = new javax.swing.JPanel();
        MovementPurposeLabel = new javax.swing.JLabel();
        MovementPurposeTextField = new javax.swing.JTextField();
        MovementLoadLabel = new javax.swing.JLabel();
        MovementLoadTextField = new javax.swing.JTextField();
        MovementRouteLabel = new javax.swing.JLabel();
        MovementRouteTextField = new javax.swing.JTextField();
        VehiclePanel = new javax.swing.JPanel();
        VehiclePlateNoLabel = new javax.swing.JLabel();
        MovementDateLabel = new javax.swing.JLabel();
        MovementDateTextField = new de.linogistix.common.gui.component.controls.LOSDateFormattedTextField();
        OrderNoLabel = new javax.swing.JLabel();
        OrderNoFormattedTextField = new javax.swing.JFormattedTextField();
        PersonsPanel = new javax.swing.JPanel();
        DriverNameLabel = new javax.swing.JLabel();
        Passenger1Label = new javax.swing.JLabel();
        Passenger1TextField = new javax.swing.JTextField();
        Passenger2Label = new javax.swing.JLabel();
        Passenger2TextField = new javax.swing.JTextField();
        Passenger3Label = new javax.swing.JLabel();
        Passenger3TextField = new javax.swing.JTextField();
        Passenger4Label = new javax.swing.JLabel();
        Passenger4TextField = new javax.swing.JTextField();

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(153, 388));
        setLayout(new java.awt.GridBagLayout());

        DocumentPropsPanel.setMinimumSize(new java.awt.Dimension(300, 175));
        DocumentPropsPanel.setLayout(new java.awt.GridBagLayout());

        OrganizationLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OrganizationLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.OrganizationLabel.text_1")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        DocumentPropsPanel.add(OrganizationLabel, gridBagConstraints);
        OrganizationLabel.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.jLabel1.AccessibleContext.accessibleName_1")); // NOI18N

        OrganizationComboBox.setMaximumSize(new java.awt.Dimension(180, 27));
        OrganizationComboBox.setMinimumSize(new java.awt.Dimension(180, 27));
        OrganizationComboBox.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        DocumentPropsPanel.add(OrganizationComboBox, gridBagConstraints);

        FormationLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        FormationLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.FormationLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        DocumentPropsPanel.add(FormationLabel, gridBagConstraints);

        FormationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ΑΤΑ", "ΓΕΑ", "ΔΑΕ", "ΔΑΥ", "ΔΑΚ" }));
        FormationComboBox.setMaximumSize(new java.awt.Dimension(180, 27));
        FormationComboBox.setMinimumSize(new java.awt.Dimension(180, 27));
        FormationComboBox.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        DocumentPropsPanel.add(FormationComboBox, gridBagConstraints);

        MillitaryUnitLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MillitaryUnitLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MillitaryUnitLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        DocumentPropsPanel.add(MillitaryUnitLabel, gridBagConstraints);

        MillitaryUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        MillitaryUnitComboBox.setMaximumSize(new java.awt.Dimension(180, 27));
        MillitaryUnitComboBox.setMinimumSize(new java.awt.Dimension(180, 27));
        MillitaryUnitComboBox.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        DocumentPropsPanel.add(MillitaryUnitComboBox, gridBagConstraints);

        DateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DateLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.DateLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        DocumentPropsPanel.add(DateLabel, gridBagConstraints);

        currentDateTextField.setToolTipText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.currentDateTextField.toolTipText")); // NOI18N
        currentDateTextField.setMaximumSize(new java.awt.Dimension(180, 27));
        currentDateTextField.setMinimumSize(new java.awt.Dimension(180, 27));
        currentDateTextField.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        DocumentPropsPanel.add(currentDateTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(DocumentPropsPanel, gridBagConstraints);

        MovementPanel.setLayout(new java.awt.GridBagLayout());

        MovementPurposeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MovementPurposeLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MovementPurposeLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 4);
        MovementPanel.add(MovementPurposeLabel, gridBagConstraints);

        MovementPurposeTextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MovementPurposeTextField.text")); // NOI18N
        MovementPurposeTextField.setMinimumSize(new java.awt.Dimension(100, 27));
        MovementPurposeTextField.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        MovementPanel.add(MovementPurposeTextField, gridBagConstraints);

        MovementLoadLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MovementLoadLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MovementLoadLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 4);
        MovementPanel.add(MovementLoadLabel, gridBagConstraints);

        MovementLoadTextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MovementPurposeTextField.text")); // NOI18N
        MovementLoadTextField.setMinimumSize(new java.awt.Dimension(100, 27));
        MovementLoadTextField.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        MovementPanel.add(MovementLoadTextField, gridBagConstraints);

        MovementRouteLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MovementRouteLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MovementRouteLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 4);
        MovementPanel.add(MovementRouteLabel, gridBagConstraints);

        MovementRouteTextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MovementPurposeTextField.text")); // NOI18N
        MovementRouteTextField.setMinimumSize(new java.awt.Dimension(100, 27));
        MovementRouteTextField.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        MovementPanel.add(MovementRouteTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(MovementPanel, gridBagConstraints);

        VehiclePanel.setMinimumSize(new java.awt.Dimension(300, 133));
        VehiclePanel.setPreferredSize(new java.awt.Dimension(325, 241));
        VehiclePanel.setLayout(new java.awt.GridBagLayout());

        VehiclePlateNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        VehiclePlateNoLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.VehiclePlateNoLabel.text")); // NOI18N
        VehiclePlateNoLabel.setAlignmentX(0.5F);
        VehiclePlateNoLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 4);
        VehiclePanel.add(VehiclePlateNoLabel, gridBagConstraints);

        MovementDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        MovementDateLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.MovementDateLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        VehiclePanel.add(MovementDateLabel, gridBagConstraints);

        MovementDateTextField.setMaximumSize(new java.awt.Dimension(180, 27));
        MovementDateTextField.setMinimumSize(new java.awt.Dimension(180, 27));
        MovementDateTextField.setPreferredSize(new java.awt.Dimension(180, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        VehiclePanel.add(MovementDateTextField, gridBagConstraints);

        OrderNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OrderNoLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.OrderNoLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        VehiclePanel.add(OrderNoLabel, gridBagConstraints);

        try {
            OrderNoFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###/####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        OrderNoFormattedTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        OrderNoFormattedTextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.OrderNoFormattedTextField.text")); // NOI18N
        OrderNoFormattedTextField.setMaximumSize(new java.awt.Dimension(140, 27));
        OrderNoFormattedTextField.setMinimumSize(new java.awt.Dimension(120, 27));
        OrderNoFormattedTextField.setPreferredSize(new java.awt.Dimension(120, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        VehiclePanel.add(OrderNoFormattedTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(VehiclePanel, gridBagConstraints);

        PersonsPanel.setLayout(new java.awt.GridBagLayout());

        DriverNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DriverNameLabel.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.DriverNameLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        PersonsPanel.add(DriverNameLabel, gridBagConstraints);

        Passenger1Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Passenger1Label.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger1Label.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        PersonsPanel.add(Passenger1Label, gridBagConstraints);

        Passenger1TextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger3TextField.text")); // NOI18N
        Passenger1TextField.setMinimumSize(new java.awt.Dimension(100, 27));
        Passenger1TextField.setNextFocusableComponent(Passenger2TextField);
        Passenger1TextField.setPreferredSize(new java.awt.Dimension(180, 27));
        Passenger1TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Passenger3TextKeyFieldTyped(evt);
                Passenger1TextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        PersonsPanel.add(Passenger1TextField, gridBagConstraints);

        Passenger2Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Passenger2Label.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger2Label.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        PersonsPanel.add(Passenger2Label, gridBagConstraints);

        Passenger2TextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger3TextField.text")); // NOI18N
        Passenger2TextField.setMinimumSize(new java.awt.Dimension(100, 27));
        Passenger2TextField.setPreferredSize(new java.awt.Dimension(180, 27));
        Passenger2TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Passenger2TextKeyFieldTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        PersonsPanel.add(Passenger2TextField, gridBagConstraints);

        Passenger3Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Passenger3Label.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger3Label.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        PersonsPanel.add(Passenger3Label, gridBagConstraints);

        Passenger3TextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger3TextField.text")); // NOI18N
        Passenger3TextField.setMinimumSize(new java.awt.Dimension(100, 27));
        Passenger3TextField.setPreferredSize(new java.awt.Dimension(180, 27));
        Passenger3TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Passenger3TextKeyFieldTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        PersonsPanel.add(Passenger3TextField, gridBagConstraints);

        Passenger4Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Passenger4Label.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger4Label.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 4);
        PersonsPanel.add(Passenger4Label, gridBagConstraints);

        Passenger4TextField.setText(org.openide.util.NbBundle.getMessage(AbstractCenterPanel.class, "AbstractCenterPanel.Passenger3TextField.text")); // NOI18N
        Passenger4TextField.setMinimumSize(new java.awt.Dimension(100, 27));
        Passenger4TextField.setPreferredSize(new java.awt.Dimension(180, 27));
        Passenger4TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Passenger4TextFieldKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 10, 0);
        PersonsPanel.add(Passenger4TextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(PersonsPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void Passenger3TextKeyFieldTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Passenger3TextKeyFieldTyped
        JTextField thisTextField = (JTextField) evt.getComponent();
        if (thisTextField.getText().length() > 3 && thisTextField.getText().contains(" ")) {
            thisTextField.setForeground(Color.BLACK);
        } else {
            thisTextField.setForeground(Color.RED);
        }

    }//GEN-LAST:event_Passenger3TextKeyFieldTyped

    private void Passenger1TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Passenger1TextFieldKeyTyped
        JTextField thisTextField = (JTextField) evt.getComponent();
        if (thisTextField.getText().length() > 3 && thisTextField.getText().contains(" ")) {
            thisTextField.setForeground(Color.BLACK);
        } else {
            thisTextField.setForeground(Color.RED);
        }
    }//GEN-LAST:event_Passenger1TextFieldKeyTyped

    private void Passenger2TextKeyFieldTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Passenger2TextKeyFieldTyped
        JTextField thisTextField = (JTextField) evt.getComponent();
        if (thisTextField.getText().length() > 3 && thisTextField.getText().contains(" ")) {
            thisTextField.setForeground(Color.BLACK);
        } else {
            thisTextField.setForeground(Color.RED);
        }
    }//GEN-LAST:event_Passenger2TextKeyFieldTyped

    private void Passenger4TextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Passenger4TextFieldKeyTyped
        JTextField thisTextField = (JTextField) evt.getComponent();
        if (thisTextField.getText().length() > 3 && thisTextField.getText().contains(" ")) {
            thisTextField.setForeground(Color.BLACK);
        } else {
            thisTextField.setForeground(Color.RED);
        }
    }//GEN-LAST:event_Passenger4TextFieldKeyTyped
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JLabel DateLabel;
    protected javax.swing.JPanel DocumentPropsPanel;
    protected javax.swing.JLabel DriverNameLabel;
    protected javax.swing.JComboBox FormationComboBox;
    protected javax.swing.JLabel FormationLabel;
    protected javax.swing.JComboBox MillitaryUnitComboBox;
    protected javax.swing.JLabel MillitaryUnitLabel;
    protected javax.swing.JLabel MovementDateLabel;
    protected de.linogistix.common.gui.component.controls.LOSDateFormattedTextField MovementDateTextField;
    protected javax.swing.JLabel MovementLoadLabel;
    protected javax.swing.JTextField MovementLoadTextField;
    private javax.swing.JPanel MovementPanel;
    protected javax.swing.JLabel MovementPurposeLabel;
    protected javax.swing.JTextField MovementPurposeTextField;
    protected javax.swing.JLabel MovementRouteLabel;
    protected javax.swing.JTextField MovementRouteTextField;
    protected javax.swing.JFormattedTextField OrderNoFormattedTextField;
    protected javax.swing.JLabel OrderNoLabel;
    protected javax.swing.JComboBox OrganizationComboBox;
    protected javax.swing.JLabel OrganizationLabel;
    protected javax.swing.JLabel Passenger1Label;
    protected javax.swing.JTextField Passenger1TextField;
    protected javax.swing.JLabel Passenger2Label;
    protected javax.swing.JTextField Passenger2TextField;
    protected javax.swing.JLabel Passenger3Label;
    protected javax.swing.JTextField Passenger3TextField;
    protected javax.swing.JLabel Passenger4Label;
    protected javax.swing.JTextField Passenger4TextField;
    protected javax.swing.JPanel PersonsPanel;
    protected javax.swing.JPanel VehiclePanel;
    protected javax.swing.JLabel VehiclePlateNoLabel;
    protected de.linogistix.common.gui.component.controls.LOSDateFormattedTextField currentDateTextField;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    protected LOSDateFormattedTextField getCurrentDateTextField() {
        return (LOSDateFormattedTextField) currentDateTextField;
    }

    protected JLabel getFormationLabel() {
        return FormationLabel;
    }

    protected JLabel getDateLabel() {
        return DateLabel;
    }

    protected JLabel getMillitaryUnitLabel() {
        return MillitaryUnitLabel;
    }

    protected JLabel getMovementDateLabel() {
        return MovementDateLabel;
    }

    protected JLabel getOrderNoLabel() {
        return OrderNoLabel;
    }

    protected JLabel getVehiclePlateNoLabel() {
        return VehiclePlateNoLabel;
    }
}
